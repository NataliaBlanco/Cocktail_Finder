{"version":3,"sources":["00_Variables.js","01_header_searcher.js","03_main_product_list.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxfile":"main.js","sourcesContent":["'use strict';\n\n/* Instructions\n *1- Crear Una esctructura Básica de HTML dividida en sus correspondientes ficheros separados\n *2- Crear Constantes con las que se va a trabajar, y los arrays vacíos para los bucles e insertar info en ellos.\n *3-Crear esctructura de HTML que quiero que se me pinte en JS y meterla en una función comentada pra despueś trabajar con ella.\n *4- Crear un fetch para ver los datos con los que voy a trabajar en este caso direccion de Api\n *5-Crear una función que cuando se haga click en la función de buscar se añadan los cóckteles de la búsqueda del listado previamente dado, en la cual meter vamos a meter el FETCH, porque queremos que nos traiga la info una vez se pinche el botón de click. Comprobar que están bien y que los traen bien de la API.\n *6-Crear la lista de favrios con los diferentes métodos y añadirle un formato en la lista normal para que queden marcados\n *7-Guardar en el LS, y que al refrescar sigan pintados\n *8-Traer de LS, se refresca y se pinta\n *9-\n */\nconst AllLists = document.querySelector('.js-allLists');\nconst inputCocktailName = document.querySelector('.js-input-cocktail');\nconst btnSearch = document.querySelector('.js-btn-search');\nconst btnReset = document.querySelector('.js-btn-reset');\nconst cocktailList = document.querySelector('.js-list');\nconst cocktailFavList = document.querySelector('.js-favourites-list');\nconst cocktailDefault = 'margarita';\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nlet listCocktailData = [];\n\nlet listfavCocktailData = [];\n","'use strict';\n//BUSCAR COCKTAILS POR SU NOMBRE\n\n/* const favCocktailStored = Json.parse(localStorage.getItem('favCocktails')); */\ndataApi(cocktailDefault);\n\nfunction handleClickBtnSrch(ev) {\n  ev.preventDefault();\n  const typeCocktailName = inputCocktailName.value;\n  dataApi(typeCocktailName);\n}\n\nfunction dataApi(valueSearch) {\n  fetch(url + valueSearch)\n    .then((response) => response.json())\n    .then(function (data) {\n      console.log(data);\n      listCocktailData = data.drinks;\n      // PaintCocktailMargarita(listCocktailData[2]);\n      PaintAllCocktails(listCocktailData);\n    });\n}\n\n//eventos\nbtnSearch.addEventListener('click', handleClickBtnSrch);\nbtnReset.addEventListener('click', handleClickBtnReset);\n","'use strict';\n\n//function\n//Pintar UN COCKTAIL DE LA LISTA DE MARGARITAS\nfunction PaintCocktail(cocktail, isfav) {\n  let pX = '';\n  if (isfav === true) {\n    pX = `<i class=\"far fa-times-circle li-card-icon js-li-card-icon\" id=${cocktail.idDrink}></i>`;\n  }\n\n  let html = `<li class=\"js-li-card li-card\" id=${cocktail.idDrink}>\n    <h3 class=li-card-title>${cocktail.strDrink}</h3>\n    <img src=${cocktail.strDrinkThumb} alt=${cocktail.strDrink} width=150 height=150 class=\"li-card-img\">`;\n\n  html += `${pX}</li>`;\n  return html;\n}\n\n//PINTAR TODOS LOS COCKTELES DE LA LISTA DE MARGARITAS\nfunction PaintAllCocktails(listCocktailData) {\n  cocktailList.innerHTML = '';\n  for (const cocktail of listCocktailData) {\n    cocktailList.innerHTML += PaintCocktail(cocktail, false);\n  }\n  addEventToCard();\n}\n\n//FUNCION PARA CLICAR EN LAS CARDS DE LA LISTA Y SEELCCIONAR cocktailIndex SUS IDs\nfunction ClickFav(ev) {\n  // A TRAVES DEL CURR.T HACE UN TOGGLE (pincha y despincha) CON LA CLASE CSS SEL.CRDS Y LAS PINTA Y DESPINTA DE ROSA\n  ev.currentTarget.classList.toggle('selected_cards');\n  const idCurrTrgt = ev.currentTarget.id;\n  // ENCUENTRA EL ELEMENTO QUE TIENE COMO IDENTIFICADOR IDDRINKS\n  const selectedCards = listCocktailData.find(\n    (cocktail) => cocktail.idDrink === idCurrTrgt\n  );\n  // ENCUENTRA LA POSICION DE LOS COCKTAILS FAVS, EN LA LISTA DE FAVS PARA PROCEDER A BORRARLA LUEGO CON LA CONDICION\n  const cocktailIndex = listfavCocktailData.findIndex(\n    (cocktail) => cocktail.idDrink === idCurrTrgt\n  );\n  //CONCIDIONAL DE..\n  if (cocktailIndex === -1) {\n    //PUSHEA LAS QUE NO ESTABAN EN LA LISTA\n    listfavCocktailData.push(selectedCards);\n    // LAS PINTA EN EL HTML\n  } else {\n    //LAS QUITA DE LA LISTA\n    listfavCocktailData.splice(cocktailIndex, 1);\n  }\n  // Y LAS VUELVE A PINTAR\n  PaintFavCocktails(listfavCocktailData);\n  DelFav();\n  console.log(selectedCards.strDrink);\n}\n//LAS COGE DEL LOCAL STORE\nfunction pullFavList() {\n  const listFavCocktail = JSON.parse(localStorage.getItem('favCocktails'));\n  if (listFavCocktail) {\n    listfavCocktailData = listFavCocktail;\n    PaintFavCocktails(listFavCocktail);\n  }\n}\n//LLAMAMOS A LA FUNCIÓN\npullFavList();\n\n//FUNCIÓN QUE PINTA TODOS LOS COCKTAILS SELECCIONADOS EN EL LISTADO DE FAVORITOS\nfunction PaintFavCocktails(listFavCocktailData) {\n  cocktailFavList.innerHTML = '';\n  AllLists.classList.add('allLists');\n  for (const cocktail of listFavCocktailData) {\n    cocktailFavList.innerHTML += PaintCocktail(cocktail, true);\n  }\n\n  localStorage.setItem('favCocktails', JSON.stringify(listfavCocktailData));\n}\n\nfunction handleClickBtnReset(ev) {\n  ev.preventDefault();\n  cocktailFavList.innerHTML = '';\n  // cocktailList.innerHTML = '';\n  /* ev.currentTarget. classList.remove('selected_cards'); */\n}\n\n//FUNCIÓN PARA QUITAR DEL LISTADO DE FAVORITOS\n\nfunction delFavCards(ev2) {\n  const idCurrTrgt = ev2.currentTarget.id;\n  console.log(idCurrTrgt);\n  const cocktailIndex = listfavCocktailData.findIndex(\n    (cocktail) => cocktail.idDrink === idCurrTrgt\n  );\n  if (cocktailIndex !== -1) {\n    listfavCocktailData.splice(cocktailIndex, 1);\n  }\n  PaintFavCocktails(listfavCocktailData);\n}\n\n//events\n//PARA SELECCIONAR TODAS LAS TARJETAS DE LA LISTA y ESCUCHAR EL EVENTO\nfunction addEventToCard() {\n  const allElementsList = document.querySelectorAll('.js-li-card');\n  for (const card of allElementsList) {\n    card.addEventListener('click', ClickFav);\n  }\n}\n\n//PARA SELECCIONAR FAVORITOS Y BORRARLOS\n\nfunction DelFav() {\n  const btnXs = document.querySelectorAll('.js-li-card-icon');\n  console.log(btnXs);\n  for (const Xbtn of btnXs) {\n    Xbtn.addEventListener('click', delFavCards);\n  }\n}\n"]}